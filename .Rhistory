devtools::use_vignette("my-vignette")
?optim
MPN <- function(g,m,t) {
optim(par=c(lambda=1),
fn=function(g,m,t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))})
}
MPN(g,m,t)
MPN <- function(g,m,t) {
optim(par=c(lambda=1),
fn=function(g=g,m=m,t=t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))})
}
MPN(g,m,t)
lambda
lambda=1
sum(g*m/(1-exp(-lambda*m)))
g=c(5,3,0)
m=c(0.1,0.01,0.001)
t=10
MPN(g,m,t)
sum(g*m/(1-exp(-lambda*m)))
sum(t*m)
sum(g*m/(1-exp(-lambda*m)))-sum(t*m))
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))
optim(par=c(lambda=1),
fn=function(g=g,m=m,t=t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))})
MPN <- function(g,m,t) {
optim(par=c(lambda=1),
fn=function(lambda,g=g,m=m,t=t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))})
}
MPN(g,m,t)
optim(par=c(lambda=1),
fn=function(lambda,g=g,m=m,t=t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))})
lambda=1
MPN <- function(g,m,t) {
optim(par=c(lambda=1),
fn=function(lambda=lambda,g=g,m=m,t=t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))})
}
MPN(g,m,t)
min_fun <- function(lambda,g,m,t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
optim(par=c(lambda=1),
fn=min_fun(lambda,g,m,t))
optimize(par=c(lambda=1),
fn=min_fun(lambda,g,m,t))
?optimize
optimize(f=min_fun(lambda,g,m,t), interval=c(0,Inf))
optimize(f=min_fun(lambda,g,m,t), interval=c(0,10^10))
min_fun <- function(lambda,g,m,t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
optimize(f=min_fun(lambda,g,m,t),
interval=c(0,10^10))
min_fun <- function(lambda,g,m,t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
optimize(min_fun(lambda,g,m,t),
interval=c(0,10^10))
min_fun <- function(lambda,g,m,t){abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
lambda
f <- function (x, a) (x - a)^2
xmin <- optimize(f, c(0, 1), tol = 0.0001, a = 1/3)
xmin
optimize(par=c(lambda=1),
fn=min_fun(lambda,g,m,t),
method="Brent")
optimize(par=c(lambda=1),
fn=min_fun(lambda,g,m,t),
method="Brent",
interval=c(0,Inf))
optimize(par=c(lambda=1),
fn=min_fun(lambda,g,m,t),
method="Brent",
interval=c(0,10^10))
optim(par=c(lambda=1),
fn=min_fun(lambda,g,m,t),
method="Brent",
interval=c(0,10^10))
optim(par=c(lambda=1),
fn=min_fun(lambda,g,m,t),
method="Brent",
lower=0,
upper=10^10)
min_fun
min_fun(lambda,g,m,t)
min_fun <- function(lambda,g,m,t){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
optim(par=c(lambda=1),
fn=min_fun(lambda,g,m,t),
method="Brent",
lower=0,
upper=10^10)
optim(par=c(lambda=1),
min_fun(lambda,g,m,t),
method="Brent",
lower=0,
upper=10^10)
min_fun(lambda,g,m,t)
min_fun
fr <- function(x) {   ## Rosenbrock Banana function
x1 <- x[1]
x2 <- x[2]
100 * (x2 - x1 * x1)^2 + (1 - x1)^2
}
grr <- function(x) { ## Gradient of 'fr'
x1 <- x[1]
x2 <- x[2]
c(-400 * x1 * (x2 - x1 * x1) - 2 * (1 - x1),
200 *      (x2 - x1 * x1))
}
optim(c(-1.2,1), fr)
optim(min_fun(lambda,g,m,t),
method="Brent",
lower=0,
upper=10^10)
optim(fn=min_fun(lambda,g,m,t),
method="Brent",
lower=0,
upper=10^10)
optim(fn=min_fun(lambda,g,m,t),
par=c(1),
method="Brent",
lower=0,
upper=10^10)
optim(min_fun(lambda,g,m,t),
par=c(1),
method="Brent",
lower=0,
upper=10^10)
min_fun(lambda,g,m,t)
optim(fn=min_fun(lambda,g,m,t),
par=c(lambda=1),
method="Brent",
lower=0,
upper=10^10, g=g,m=m,t=t)
optimize(f=min_fun(),
lower=0,
upper=10^10,
g=g,m=m,t=t)
t
optimize(f=min_fun(lambda,g=g,m=m,t=t),
lower=0,
upper=10^10)
f <- function (x, a) (x - a)^2
xmin <- optimize(f, c(0, 1), tol = 0.0001, a = 1/3)
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
min_fun
min_fun(1)
min_fun(2)
optimize(f=min_fun,
lower=0,
upper=10^10)
optimize(f=min_fun,
lower=0,
upper=10^100)
optim(fn=min_fun,
par=c(lambda=1),
method="Brent",
lower=0,
upper=10^10, g=g,m=m,t=t)
optim(fn=min_fun,
par=c(lambda=1),
method="Brent",
lower=0,
upper=10^10)
optimize(f=min_fun,
lower=0,
upper=10^100)
?attach
MPN <- function(g,m,t) {
attach(g)
attach(m)
attach(t)
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
optimize(f=min_fun,
lower=0,
upper=10^100)
}
MPN <- function(g,m,t) {
attach(g)
attach(m)
attach(t)
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optimize(f=min_fun,
lower=0,
upper=10^100)
return(solution)
}
MPN(c(5,3,0), c(0.1,0.01,0.001), 10)
?with
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optimize(f=min_fun,
lower=0,
upper=10^100)
return(solution)
}
MPN(c(5,3,0), c(0.1,0.01,0.001), 10)
rm(list=ls())
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optimize(f=min_fun,
lower=0,
upper=10^100)
return(solution)
}
MPN(c(5,3,0), c(0.1,0.01,0.001), 10)
MPN <- function(g,m,t){
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optimize(f=min_fun,
lower=0,
upper=10^100)
return(solution)
}
MPN(g,m,t)
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
MPN(g=c(8,7,2),
m=c(0.1,0.01,0.001),
t=10)
MPN(g=c(4,2),
m=c(0.1,0.01),
t=10)
t*m
g=c(5,3,0)
m=c(0.1,0.01,0.001)
t=10
t*m
t*m
lambda=0.58
sum(g*m/(1-exp(-lambda*m)))-sum(t*m)
g=c(5,3,0)
m=c(0.1,0.01,0.001)
t=c(10,10,10)
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))
g*m
(1-exp(-lambda*m)
)
sum(g*m/(1-exp(-lambda*m)))
sum(t*m)
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))
optimize(f=min_fun,
lower=0,
upper=10^100)
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
optimize(f=min_fun,
lower=0,
upper=10^100)
min_fun(0.58)
?optimize
f <- function (x, a) (x - a)^2
xmin <- optimize(f, c(0, 1), tol = 0.0001, a = 1/3)
xmin
f(0)
f(a=0)
f(x=0,a=22)
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optimize(f=min_fun,
lower=0,
upper=10^100)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optim(fn=min_fun,
par=c(lambda=1),
method="Brent",
lower=0,
upper=10^10)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
min_fun(0.58)
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(t*m)-sum(g*m/(1-exp(-lambda*m))))}
solution <- optim(fn=min_fun,
par=c(lambda=1),
method="Brent",
lower=0,
upper=10^10)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
min_fun(1:100)
?sapply
vapply(1:100, min_fun)
vapply(1:100, FUN=min_fun)
sapply(1:100, FUN=min_fun)
plot(1:100,sapply(1:100, FUN=min_fun))
min_fun(9.951)
min_fun(9.9515)
min_fun(9.95077_
min_fun(9.95077)
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
min_fun(9.95077)
?optim
plot(seq(0,20,0.1),sapply(seq(0,20,0.1), FUN=min_fun))
plot(seq(0,20,0.1),sapply(seq(0,20,0.1), FUN=min_fun))
seq(0,20,0.1)
plot(1:100,sapply(1:100, FUN=min_fun))
plot(1:20,sapply(1:20, FUN=min_fun))
plot(seq(0,20,0.1),sapply(seq(0,20,0.1), FUN=min_fun))
plot(1:20,sapply(1:20, FUN=min_fun))
plot(seq(0,20,0.1),sapply(seq(0,20,0.1), FUN=min_fun))
plot(1:20,sapply(1:20, FUN=min_fun))
min_fun(0)
min_fun(1)
plot(1:20,sapply(1:20, FUN=min_fun))
plot(seq(1,20,0.1),sapply(seq(1,20,0.1), FUN=min_fun))
plot(seq(1,20,0.1),sapply(seq(1,20,0.1), FUN=min_fun))
plot(1:20,sapply(1:20, FUN=min_fun))
plot(seq(1,20,0.1),sapply(seq(1,20,0.1), FUN=min_fun))
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optim(fn=min_fun,
par=c(lambda=1),
method="Brent",
lower=10^-10,
upper=10^10)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
MPf <- function (x, a) (x - a)^2
xmin <- optimize(f, c(0, 1), tol = 0.0001, a = 1/3)
xmin
f <- function (x, a) (x - a)^2
xmin <- optimize(f, c(0, 1), tol = 0.0001, a = 1/3)
xmin
plot(1:20,sapply(1:20, FUN=f))
a=10
plot(1:20,sapply(1:20, FUN=f))
plot(1:20,sapply(1:20, FUN=f,a=10))
f(10,10)
f(15,10)
optimize(f, c(0, 1), tol = 0.0001, a = 10)
f(0,1/3)
f(0.3333,1/3)
plot(1:20,sapply(1:20, FUN=f,a=1/3))
.Machine$double.eps^0.25
plot(f, -2,5, ylim = 0:1, col = 2)
f  <- function(x) ifelse(x > -1, ifelse(x < 4, exp(-1/abs(x - 1)), 10), 10)
fp <- function(x) { print(x); f(x) }
plot(f, -2,5, ylim = 0:1, col = 2)
optimize(fp, c(-4, 20))   # doesn't see the minimum
optimize(fp, c(-7, 20))   # ok
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optim(fn=min_fun,
par=c(lambda=1),
method="Brent",
lower=1,
upper=10^10)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optimize(f=min_fun,
lower=0,
upper=10^100)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optimize(f=min_fun,
lower=0,
upper=10)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optimize(f=min_fun,
lower=0,
upper=100)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optim(fn=min_fun,
par=c(lambda=1),
method="Brent",
lower=0,
upper=100)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
MPN <- function(g,m,t) {
min_fun <- function(lambda){
abs(sum(g*m/(1-exp(-lambda*m)))-sum(t*m))}
solution <- optimize(f=min_fun,
lower=0,
upper=100)
return(solution)
}
MPN(g=c(5,3,0),
m=c(0.1,0.01,0.001),
t=10)
library(MPN)
?MPN
help(package=MPN)
library(MPN)
library(MPN)
help(package=MPN)
MPN(g=c(5,3,0),m=c(0.1,0.01,0.001),t=10)
library(MPN)
MPN(g=c(5,3,0),m=c(0.1,0.01,0.001),t=10)
